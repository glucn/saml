// Code generated by mockery v1.0.0. DO NOT EDIT.
package saml

import context "context"
import mock "github.com/stretchr/testify/mock"

// MockInterface is an autogenerated mock type for the Interface type
type MockInterface struct {
	mock.Mock
}

// GetSAMLResponse provides a mock function with given fields: ctx, userID, sessionID, email, audience, recipient, destination, hasAttributeStatement
func (_m *MockInterface) GetSAMLResponse(ctx context.Context, userID string, sessionID string, email string, audience string, recipient string, destination string, hasAttributeStatement bool) (string, error) {
	ret := _m.Called(ctx, userID, sessionID, email, audience, recipient, destination, hasAttributeStatement)

	var r0 string
	if rf, ok := ret.Get(0).(func(context.Context, string, string, string, string, string, string, bool) string); ok {
		r0 = rf(ctx, userID, sessionID, email, audience, recipient, destination, hasAttributeStatement)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string, string, string, string, string, string, bool) error); ok {
		r1 = rf(ctx, userID, sessionID, email, audience, recipient, destination, hasAttributeStatement)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ProcessSAMLRequest provides a mock function with given fields: ctx, requestInput
func (_m *MockInterface) ProcessSAMLRequest(ctx context.Context, requestInput string) (*AuthnRequest, error) {
	ret := _m.Called(ctx, requestInput)

	var r0 *AuthnRequest
	if rf, ok := ret.Get(0).(func(context.Context, string) *AuthnRequest); ok {
		r0 = rf(ctx, requestInput)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*AuthnRequest)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, requestInput)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
